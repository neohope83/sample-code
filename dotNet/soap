using System;
using System.Net.Http;
using System.Text;
using System.Threading.Tasks;

namespace SoapRequestSample
{
    class Program
    {
        private const string EndpointUrl = "https://example.com/soap-endpoint";
        private const string SoapAction = "SomeSOAPActionIfRequired"; // Adjust this if required by the SOAP service

        static async Task Main(string[] args)
        {
            string soapEnvelope =
                @"<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:web=""http://www.example.com/"">
                    <soapenv:Header/>
                    <soapenv:Body>
                        <web:YourOperation>
                            <web:YourParameter>YourValue</web:YourParameter> 
                        </web:YourOperation>
                    </soapenv:Body>
                </soapenv:Envelope>";

            using (HttpClient client = new HttpClient())
            {
                client.DefaultRequestHeaders.Add("SOAPAction", SoapAction);
                HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Post, EndpointUrl)
                {
                    Content = new StringContent(soapEnvelope, Encoding.UTF8, "text/xml")
                };

                HttpResponseMessage response = await client.SendAsync(request);
                Console.WriteLine($"Response Status Code: {response.StatusCode}");
                if (response.IsSuccessStatusCode)
                {
                    string responseBody = await response.Content.ReadAsStringAsync();
                    Console.WriteLine(responseBody);
                }
                else
                {
                    Console.WriteLine("Error: " + response.ReasonPhrase);
                }
            }
        }
    }
}
